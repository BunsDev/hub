{
  "/auth/sign-in": {
    "get": {
      "summary": "Log in using github or ethereum address",
      "parameters": [
        {
          "in": "header",
          "name": "withCredentials",
          "type": "boolean",
          "description": "Allows the UI to send cookies to the backend",
          "required": true,
          "example": true
        },
        {
          "in": "query",
          "name": "address",
          "type": "string",
          "description": "Address to log in with (Optional)",
          "example": "0xADDRESS",
          "required": false
        },
        {
          "in": "query",
          "name": "redirectUrl",
          "type": "string",
          "description": "Route where you want the user to be redirected on successful login, this is required IF address has not been provided",
          "example": "/apis",
          "required": false
        }
      ],
      "responses": {
        "200": {
          "description": "User information",
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "status": {
                    "type": "integer"
                  },
                  "user": {
                    "$ref": "#/definitions/User"
                  }
                },
                "example": {
                  "status": 200,
                  "user": {
                    "accessToken": "gho_ACCESS_TOKEN",
                    "username": "cbrzn",
                    "githubId": "240",
                    "id": "1"
                  }
                }
              }
            }
          }
        },
        "302": {
          "description": "Redirect to Github so user can authenticate"
        },
        "500": {
          "description": "Unexpected error on API",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "integer"
                  },
                  "error": {
                    "type": "string"
                  }
                },
                "example": {
                  "status": 500,
                  "error": ""
                }
              }
            }
          }
        }
      }
    }
  }
}
